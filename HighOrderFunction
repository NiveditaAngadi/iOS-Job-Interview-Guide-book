1. Reduce
Returns the result of combining the elements of the sequence using the given closure.

reduce(_:_:)

func reduce<Result>(
    _ initialResult: Result,
    _ nextPartialResult: (Result, Self.Element) throws -> Result
) rethrows -> Result

initialResult
The value to use as the initial accumulating value. initialResult is passed to nextPartialResult the first time the closure is executed.
nextPartialResult
A closure that combines an accumulating value and an element of the sequence into a new accumulating value, 
to be used in the next call of the nextPartialResult closure or returned to the caller.

The final accumulated value. If the sequence has no elements, the result is initialResult.

let numbers = [1, 2, 3, 4]
let numberSum = numbers.reduce(0, { x, y in
    x + y
})
// numberSum == 10

Reference:
https://developer.apple.com/documentation/swift/array/reduce(_:_:)
